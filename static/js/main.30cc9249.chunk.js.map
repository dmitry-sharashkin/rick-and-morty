{"version":3,"sources":["components/Modal/Modal.tsx","components/Main/Main.tsx","components/Nav/Nav.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Modal","share","setToggleModal","className","style","position","minWidth","zIndex","top","left","transform","padding","paddingTop","paddingBottom","borderRadius","onClick","type","src","image","alt","name","created","paddingLeft","paddingRight","fontSize","classNames","status","species","gender","href","location","url","origin","episode","map","ep","index","length","Main","data","shareChar","c","maxWidth","id","Nav","info","changePage","prevPage","currentPage","nextPage","pages","i","push","count","prev","p","next","App","initialState","useState","setData","setInfo","setShare","setCurrentPage","toggleModal","baseUrl","useEffect","axios","get","then","res","results","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30cc9249.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nconst Modal = ({share, setToggleModal}: any) => {\r\n    const customPopup: any = {\r\n        position: \"fixed\",\r\n        minWidth: 280,\r\n        zIndex: 2,\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%,-50%)',\r\n        padding: 25,\r\n        paddingTop:25,\r\n        paddingBottom: 35,\r\n        borderRadius: 14\r\n\r\n    }\r\n    const alignArticleCenter: any = {\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        paddingBottom: 20,\r\n        fontSize: `1.2em`,\r\n    }\r\n    return <div className=\"card  col w-50\" style={customPopup}>\r\n        <div className=\"row  g-0\">\r\n            <div className='col-md-12 d-flex justify-content-end '>\r\n                <button onClick={() => setToggleModal(false)} type=\"button\" className=\"btn-close\"/>\r\n            </div>\r\n            <div className=\"col-md-5 overflow-hidden\">\r\n                <img className='w-100' src={share.image} alt={share.name}/>\r\n                <p className='card-text'><small className='text-muted'>created: {share.created}</small></p>\r\n            </div>\r\n            <div className=\"col-md-7\" style={alignArticleCenter}>\r\n                <h2 className=\"card-title\">{share.name}</h2>\r\n                <ul className=\"card-text list-group list-group-flush\">\r\n\r\n                    <li className='list-group-item'> status: <span className={classNames({\r\n                        \"badge bg-secondary\": share.status === 'unknown',\r\n                        \"badge bg-success\": share.status === 'Alive',\r\n                        \"badge bg-danger\": share.status === 'Dead',\r\n                    })}> {share.status}</span> <br/>\r\n                    </li>\r\n                    <li className='list-group-item'>\r\n                        species: {share.species}<br/>\r\n                    </li>\r\n                    <li className='list-group-item'>\r\n                        gender: {share.gender}<br/>\r\n                    </li>\r\n                    <li className='list-group-item'>\r\n                        type: {share.type}\r\n                    </li>\r\n                    <li className='list-group-item'>\r\n\r\n                        location: <a className=\"link-info\" href={share.location.url}> {share.location.name} </a>\r\n                    </li>\r\n                    <li className='list-group-item'>\r\n\r\n                        origin: {share.origin.name === \"unknown\" ? <span> {share.origin.name}</span> :\r\n                        <a className=\"link-info\" href={share.origin.url}> {share.origin.name} </a>}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <div className=\"col-md-12 mt-3\">\r\n            <h3>Episodes</h3>\r\n            {share.episode.map((ep:string, index:number)=>(index<9)?<span key={index}><a href={ep} className=\"link-info\">{ep}</a> </span>:'')}\r\n            {(share.episode.length >= 10)?<span className='text-muted'>...</span>:''}\r\n        </div>\r\n    </div>\r\n\r\n}\r\nexport default Modal","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { CharType } from \"../../TypeScript/Types\";\r\n\r\nconst Main = ({data,shareChar}:any) => {\r\n    return<main className='mt-1'>\r\n\r\n        <div className=\"row row-cols-4   row-cols-md-2 g-4 m-auto\">\r\n            {\r\n                data.map((c: CharType, index: number) => <div key={c.id} className=\"card m-2\"\r\n                                                              style={{maxWidth: 308}}>\r\n                    <div className=\"row \">\r\n                        <img src={c.image} className=\"img-fluid rounded-start\" alt={c.name}/>\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">{c.name}</h5>\r\n                            <p className=\"card-text\">\r\n                                status: <span className={classNames({\r\n                                \"badge bg-secondary\": c.status === 'unknown',\r\n                                \"badge bg-success\": c.status === 'Alive',\r\n                                \"badge bg-danger\": c.status === 'Dead',\r\n                            })}> {c.status}</span> <br/>\r\n                                species: {c.species}<br/>\r\n                                gender: {c.gender}<br/>\r\n                                type: {c.type ? `${c.type} ` : ''}\r\n                            </p>\r\n                            <button onClick={() => shareChar(index)} className=\"btn btn-success\">Show more\r\n                            </button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>)\r\n            }\r\n        </div>\r\n\r\n    </main>\r\n\r\n}\r\n export  default Main","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nconst Nav = ({info, changePage, prevPage, currentPage, nextPage}: any) => {\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= info.pages; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n\r\n    return <div className='mt-3'>\r\n        <div>\r\n            Characters: {info.count}\r\n        </div>\r\n        <nav className='mt-2 d-flex justify-content-center'>\r\n            <ul className=\"pagination\">\r\n                <li onClick={prevPage}\r\n                    className={classNames({\r\n                        'page-item': true,\r\n                        'disabled': info.prev === null,\r\n                    })}>\r\n                    <button className=\"page-link \">\r\n                                <span className={classNames({\r\n                                    'text-success': info.prev !== null\r\n                                })}>&laquo;</span>\r\n                    </button>\r\n                </li>\r\n                {pages.map((p: number) => {\r\n                    if ((p >= currentPage && p < currentPage + 10)) {\r\n                        return <li key={p} onClick={() => changePage(p)} className={classNames({\r\n                            'page-item': true,\r\n                        })}>\r\n                            <button className={classNames({\r\n                                'page-link': true,\r\n                                'bg-success': currentPage === p,\r\n                                'text-white': currentPage === p,\r\n                                'text-success': currentPage !== p,\r\n                            })}>{p}</button>\r\n                        </li>\r\n                    }\r\n                })}\r\n\r\n\r\n                <li onClick={nextPage}\r\n                    className={classNames({\r\n                        'page-item': true,\r\n                        'disabled': info.next === null,\r\n                    })}>\r\n                    <button className=\"page-link\">\r\n                                <span className={classNames({\r\n                                    'text-success': info.next !== null\r\n                                })}>&raquo;</span>\r\n                    </button>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n\r\n    </div>\r\n\r\n\r\n}\r\nexport default Nav","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport axios from \"axios\";\nimport Modal from \"./components/Modal/Modal\";\nimport Main from \"./components/Main/Main\";\nimport {CharType} from \"./TypeScript/Types\";\nimport Nav from './components/Nav/Nav';\n\nconst App: React.FC = () => {\n\n    const initialState: CharType | any = {};\n    const [data, setData] = useState([])\n    const [info, setInfo] = useState(initialState)\n    const [share, setShare] = useState(initialState)\n    const [currentPage, setCurrentPage] = useState(1)\n    const [toggleModal, setToggleModal] = useState(false)\n\n    const baseUrl: string = 'https://rickandmortyapi.com/api/character/';\n\n    useEffect(() => {\n        axios.get(baseUrl).then(res => {\n            setData(res.data.results)\n            setInfo(res.data.info)\n            setCurrentPage(1)\n\n        })\n\n    }, [])\n\n    function nextPage() {\n        if (info.next === null) {\n            return\n        }\n        axios.get(info.next).then(res => {\n            setData(res.data.results)\n            setInfo(res.data.info)\n            setCurrentPage(currentPage + 1)\n\n        })\n    }\n\n    function prevPage() {\n        if (info.prev === null) {\n            return\n        }\n        axios.get(info.prev).then(res => {\n            setData(res.data.results)\n            setInfo(res.data.info)\n            setCurrentPage(currentPage - 1)\n        })\n    }\n\n    function changePage(p: number) {\n        if (p === currentPage) {\n            return\n        }\n        axios.get(`${baseUrl}?page=${p}`).then(res => {\n            setData(res.data.results)\n            setInfo(res.data.info)\n            setCurrentPage(p)\n        })\n    }\n\n    function shareChar(index: number) {\n        setShare(data[index])\n        setToggleModal(true)\n    }\n\n    console.log(info)\n\n\n    return (\n        <div className=\"container-sm \">\n            <header className=\"App-header\">\n                <img alt='HeaderLogo' className='headerLogo'\n                     src='https://occ-0-1722-1723.1.nflxso.net/dnm/api/v6/LmEnxtiAuzezXBjYXPuDgfZ4zZQ/AAAABUmVLxeatH508rcDIJJz2cyvcGOzvAth5IzI5MrAJKYF_Od9t-t05i6neGRE8GUuTXqK_PwaWrp4PtcgHCq5FcrIJ32JKfRUPc4w.png?r=a66'/>\n                {\n                    toggleModal && <Modal setToggleModal={setToggleModal} share={share}/>\n                }\n\n            </header>\n            <Nav\n                info={info}\n                currentPage={currentPage}\n                prevPage={prevPage}\n                changePage={changePage}\n                nextPage={nextPage}/>\n            <Main data={data} shareChar={shareChar}/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}