{"version":3,"sources":["components/Modal/Modal.tsx","components/Main/Main.tsx","components/Nav/FilterDrop.tsx","components/Nav/Nav.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Modal","share","setToggleModal","className","style","position","minWidth","zIndex","top","left","transform","padding","paddingTop","paddingBottom","borderRadius","onClick","type","src","image","alt","name","created","paddingLeft","paddingRight","fontSize","classNames","status","species","gender","href","location","url","origin","episode","map","ep","index","length","Main","data","shareChar","c","maxWidth","id","FilterDrop","getter","setter","list","header","useState","toggleFilter","setToggleFilter","xmlns","width","height","fill","viewBox","d","value","Nav","info","changePage","prevPage","currentPage","nextPage","setStatus","searchWithFilters","clearFilters","setGender","setType","setName","setSpecies","nameSearch","useRef","pages","i","push","onChange","current","ref","placeholder","prev","p","next","count","App","initialState","setData","setInfo","setShare","setCurrentPage","toggleModal","baseUrl","useEffect","axios","get","then","res","results","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9513491a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nconst Modal = ({share, setToggleModal}: any) => {\r\n    const customPopup: any = {\r\n        position: \"fixed\",\r\n        minWidth: 280,\r\n        zIndex: 2,\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%,-50%)',\r\n        padding: 25,\r\n        paddingTop:25,\r\n        paddingBottom: 35,\r\n        borderRadius: 14\r\n\r\n    }\r\n    const alignArticleCenter: any = {\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        paddingBottom: 20,\r\n        fontSize: `1.2em`,\r\n    }\r\n    return <div className=\"card  col w-50\" style={customPopup}>\r\n        <div className=\"row  g-0\">\r\n            <div className='col-md-12 d-flex justify-content-end '>\r\n                <button onClick={() => setToggleModal(false)} type=\"button\" className=\"btn-close\"/>\r\n            </div>\r\n            <div className=\"col-md-5 overflow-hidden\">\r\n                <img className='w-100' src={share.image} alt={share.name}/>\r\n                <p className='card-text'><small className='text-muted'>created: {share.created}</small></p>\r\n            </div>\r\n            <div className=\"col-md-7\" style={alignArticleCenter}>\r\n                <h2 className=\"card-title\">{share.name}</h2>\r\n                <ul className=\"card-text list-group list-group-flush\">\r\n\r\n                    <li className='list-group-item'> status: <span className={classNames({\r\n                        \"badge bg-secondary\": share.status === 'unknown',\r\n                        \"badge bg-success\": share.status === 'Alive',\r\n                        \"badge bg-danger\": share.status === 'Dead',\r\n                    })}> {share.status}</span> <br/>\r\n                    </li>\r\n                    <li className='list-group-item'>\r\n                        species: {share.species}<br/>\r\n                    </li>\r\n                    <li className='list-group-item'>\r\n                        gender: {share.gender}<br/>\r\n                    </li>\r\n                    <li className='list-group-item'>\r\n                        type: {share.type}\r\n                    </li>\r\n                    <li className='list-group-item'>\r\n\r\n                        location: <a className=\"link-info\" href={share.location.url}> {share.location.name} </a>\r\n                    </li>\r\n                    <li className='list-group-item'>\r\n\r\n                        origin: {share.origin.name === \"unknown\" ? <span> {share.origin.name}</span> :\r\n                        <a className=\"link-info\" href={share.origin.url}> {share.origin.name} </a>}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <div className=\"col-md-12 mt-3\">\r\n            <h3>Episodes</h3>\r\n            {share.episode.map((ep:string, index:number)=>(index<9)?<span key={index}><a href={ep} className=\"link-info\">{ep}</a> </span>:'')}\r\n            {(share.episode.length >= 10)?<span className='text-muted'>...</span>:''}\r\n        </div>\r\n    </div>\r\n\r\n}\r\nexport default Modal","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { CharType } from \"../../TypeScript/Types\";\r\n\r\nconst Main = ({data,shareChar}:any) => {\r\n    return<main >\r\n\r\n        <div className=\"row row-cols-4   row-cols-md-2 g-4 m-auto\">\r\n            {\r\n                data.map((c: CharType, index: number) => <div key={c.id} className=\"card m-2\"\r\n                                                              style={{maxWidth: 308}}>\r\n                    <div className=\"row \">\r\n                        <img src={c.image} className=\"img-fluid rounded-start\" alt={c.name}/>\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">{c.name}</h5>\r\n                            <p className=\"card-text\">\r\n                                status: <span className={classNames({\r\n                                \"badge bg-secondary\": c.status === 'unknown',\r\n                                \"badge bg-success\": c.status === 'Alive',\r\n                                \"badge bg-danger\": c.status === 'Dead',\r\n                            })}> {c.status}</span> <br/>\r\n                                species: {c.species}<br/>\r\n                                gender: {c.gender}<br/>\r\n                                type: {c.type ? `${c.type} ` : ''}\r\n                            </p>\r\n                            <button onClick={() => shareChar(index)} className=\"btn btn-success\">Show more\r\n                            </button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>)\r\n            }\r\n        </div>\r\n\r\n    </main>\r\n\r\n}\r\n export  default Main","import React, {useState} from \"react\";\r\n\r\nconst FilterDrop = ({getter, setter, list,header}: any) => {\r\n\r\n    const [toggleFilter, setToggleFilter] = useState(false)\r\n\r\n    return <div className=\"filtersDrop__wrap\">\r\n        <button className='btn btn-outline-success' onClick={() => setToggleFilter(!toggleFilter)}>{header}: {getter}\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n                 className=\"bi bi-caret-down-fill\" viewBox=\"0 0 16 16\">\r\n                <path\r\n                    d=\"M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\"/>\r\n            </svg>\r\n        </button>\r\n        {toggleFilter && <ul className='list-group filtersDrop'>\r\n            {list.map((value: string, index: number) => <li key={index} className='list-group-item'\r\n                                                            onClick={() => setter(value)}>{(value) ? value : 'all'}</li>)}\r\n\r\n        </ul>}\r\n\r\n\r\n    </div>\r\n}\r\nexport default FilterDrop","import React, {useRef, useState} from \"react\";\r\nimport classNames from \"classnames\";\r\nimport FilterDrop from \"./FilterDrop\";\r\n\r\nconst Nav = ({info, changePage, prevPage, currentPage, nextPage, status, setStatus, searchWithFilters, clearFilters, setGender, gender, type, setType, name, setName, species, setSpecies}: any) => {\r\n    const nameSearch: any = useRef()\r\n    let pages = [];\r\n    for (let i = 1; i <= info.pages; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const statusList: Array<string> = ['', 'alive', 'dead', 'unknown']\r\n    const genderList: Array<string> = ['', 'male', 'female', 'genderless', 'unknown']\r\n    const speciesList: Array<string> = ['', 'Human', 'Alien', 'Humanoid', 'Poopybutthole', 'Mythological Creature', 'unknown']\r\n    const typeList: Array<string> = ['', 'Parasite', 'Monster', 'Conjoined twin', 'Sentient ant colony', 'Human Gazorpian', 'Boobie buyer reptilian', 'The Devil', ' Superhuman']\r\n\r\n    function f() {\r\n        setName(nameSearch.current.value)\r\n    }\r\n\r\n    return <div className='mt-3'>\r\n        <h3 className='text-success mt-5'>Filters</h3>\r\n        <div className=\"filtersWrap\">\r\n\r\n\r\n            <FilterDrop list={statusList} getter={status} setter={setStatus} header='status'/>\r\n            <FilterDrop list={genderList} getter={gender} setter={setGender} header='gender'/>\r\n            <FilterDrop list={speciesList} getter={species} setter={setSpecies} header={'species'}/>\r\n            <FilterDrop list={typeList} getter={type} setter={setType} header={'species'}/>\r\n\r\n\r\n        </div>\r\n\r\n        <div className=\"  col-md-3\">\r\n            <label>Search by name</label>\r\n            <input onChange={f} ref={nameSearch} className=\"form-control me-2\" type=\"text\" value={name}\r\n                   placeholder=\"Search by name\"/>\r\n\r\n        </div>\r\n\r\n        <div className=\"mt-3\">\r\n            <button style={{'marginRight': 10}} className='btn btn-success ' onClick={searchWithFilters}>Search</button>\r\n            <button className='btn btn-danger  ' onClick={clearFilters}>Clear</button>\r\n        </div>\r\n\r\n        <nav className='mt-2 d-flex justify-content-center'>\r\n            <ul className=\"pagination\">\r\n                <li onClick={prevPage}\r\n                    className={classNames({\r\n                        'page-item': true,\r\n                        'disabled': info.prev === null,\r\n                    })}>\r\n                    <button className=\"page-link \">\r\n                                <span className={classNames({\r\n                                    'text-success': info.prev !== null\r\n                                })}>&laquo;</span>\r\n                    </button>\r\n                </li>\r\n                {pages.map((p: number) => {\r\n                    if ((p >= currentPage && p < currentPage + 10)) {\r\n                        return <li key={p} onClick={() => changePage(p)} className={classNames({\r\n                            'page-item': true,\r\n                        })}>\r\n                            <button className={classNames({\r\n                                'page-link': true,\r\n                                'bg-success': currentPage === p,\r\n                                'text-white': currentPage === p,\r\n                                'text-success': currentPage !== p,\r\n                            })}>{p}</button>\r\n                        </li>\r\n                    }\r\n                })}\r\n\r\n\r\n                <li onClick={nextPage}\r\n                    className={classNames({\r\n                        'page-item': true,\r\n                        'disabled': info.next === null,\r\n                    })}>\r\n                    <button className=\"page-link\">\r\n                                <span className={classNames({\r\n                                    'text-success': info.next !== null\r\n                                })}>&raquo;</span>\r\n                    </button>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n        <div>\r\n            Characters: {info.count}\r\n        </div>\r\n    </div>\r\n\r\n\r\n}\r\nexport default Nav","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport axios from \"axios\";\nimport Modal from \"./components/Modal/Modal\";\nimport Main from \"./components/Main/Main\";\nimport {CharType} from \"./TypeScript/Types\";\nimport Nav from './components/Nav/Nav';\n\nconst App: React.FC = () => {\n\n    const initialState: CharType | any = {};\n    const [data, setData] = useState([])\n    const [info, setInfo] = useState(initialState)\n    const [share, setShare] = useState(initialState)\n    const [currentPage, setCurrentPage] = useState(1)\n    const [toggleModal, setToggleModal] = useState(false)\n\n\n    const [name, setName] = useState('')\n    const [status, setStatus] = useState('')\n    const [species, setSpecies] = useState('')\n    const [type, setType] = useState('')\n    const [gender, setGender] = useState('')\n\n    const baseUrl: string = 'https://rickandmortyapi.com/api/character/';\n\n    useEffect(() => {\n        axios.get(baseUrl).then(res => {\n            setData(res.data.results)\n            setInfo(res.data.info)\n            setCurrentPage(1)\n\n        })\n\n    }, [])\n\n\n    function searchWithFilters() {\n\n        axios.get(baseUrl + `?page=1&name=${name}&status=${status}&species=${species}&type=${type}&gender=${gender}`).then(res => {\n            setData(res.data.results)\n            setInfo(res.data.info)\n            setCurrentPage(1)\n\n        })\n    }\n    function clearFilters() {\n        setName('')\n        setGender('')\n        setType('')\n        setStatus('')\n        setSpecies('')\n\n    }\n\n\n    function nextPage() {\n        if (info.next === null) {\n            return\n        }\n        axios.get(info.next).then(res => {\n            setData(res.data.results)\n            setInfo(res.data.info)\n            setCurrentPage(currentPage + 1)\n\n        })\n    }\n\n    function prevPage() {\n        if (info.prev === null) {\n            return\n        }\n        axios.get(info.prev).then(res => {\n            setData(res.data.results)\n            setInfo(res.data.info)\n            setCurrentPage(currentPage - 1)\n        })\n    }\n\n    function changePage(p: number) {\n        if (p === currentPage) {\n            return\n        }\n        axios.get(`${baseUrl}?page=${p}&name=${name}&status=${status}&species=${species}&type${type}&gender=${gender}`).then(res => {\n            setData(res.data.results)\n            setInfo(res.data.info)\n            setCurrentPage(p)\n        })\n    }\n\n    function shareChar(index: number) {\n        setShare(data[index])\n        setToggleModal(true)\n    }\n\n    console.log(data)\n\n    return (\n        <div className=\"container-sm \">\n            <header className=\"App-header\">\n                <img alt='HeaderLogo' className='headerLogo'\n                     src='https://occ-0-1722-1723.1.nflxso.net/dnm/api/v6/LmEnxtiAuzezXBjYXPuDgfZ4zZQ/AAAABUmVLxeatH508rcDIJJz2cyvcGOzvAth5IzI5MrAJKYF_Od9t-t05i6neGRE8GUuTXqK_PwaWrp4PtcgHCq5FcrIJ32JKfRUPc4w.png?r=a66'/>\n                {\n                    toggleModal && <Modal setToggleModal={setToggleModal} share={share}/>\n                }\n            </header>\n\n\n            <Nav\n                clearFilters={clearFilters}\n                setName={setName}\n                name={name}\n                setGender={setGender}\n                gender={gender}\n                setType={setType}\n                type={type}\n                setSpecies={setSpecies}\n                species={species}\n                searchWithFilters={searchWithFilters}\n                status={status}\n                setStatus={setStatus}\n                info={info}\n                currentPage={currentPage}\n                prevPage={prevPage}\n                changePage={changePage}\n                nextPage={nextPage}/>\n\n            <Main data={data} shareChar={shareChar}/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}